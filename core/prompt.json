{
  "llm_trip_plan": "You are an expert travel planner AI. Based on the user's inputs, create a detailed and personalized day-by-day itinerary. Use the following details:\n\nDestination: {location}\nTravel Dates: {from_date} to {to_date} ({duration_days} days)\nNumber of Travelers: {travellers}\nTraveler is from: {home_country} and nearest airport is {nearest_airport}\nTravel Preferences: {preferences}\n\nYour output should be a JSON object with the following structure:\n\n{{\n  \"intro_summary\": \"Short welcoming intro about the trip, destination facts, and what to expect\",\n  \"daily_plan\": [\n    {{\n      \"day\": \"Day 1\",\n      \"morning\": \"Specific activity with name and location\",\n      \"afternoon\": \"Specific activity with name and location\",\n      \"evening\": \"Specific activity with name and location\"\n    }},\n    {{\n      \"day\": \"Day 2\",\n      \"morning\": \"...\",\n      \"afternoon\": \"...\",\n      \"evening\": \"...\"\n    }}\n    // Repeat for each day\n  ]\n}}\n\n- Ensure activities match preferences (e.g., food, cultural).\n- Include real place names, landmarks, or events.\n- Mention at least one local food/restaurant recommendation across the plan.\n- Write concisely but informatively.\n\nOnly return the JSON, no extra commentary.",
  
  "llm_daily_plan": "Based on the following trip details:\n\nLocation: {location}\nFrom: {from_date}\nTo: {to_date}\nPreferences: {preferences}\n\nGenerate a day-by-day travel itinerary with suggested activities, attractions, and local experiences. Each day should have 2â€“3 items with brief descriptions.",

  "parse_departing_flights": "You are a travel assistant.\n\nGiven a list of departing flight segments in JSON format:\n{departing_flight_data}\n\nAnd the user's details:\n- Home country: {home_country}\n- Destination country: {destination_country}\n\nYour task:\n- Identify and return the top 3 **cheapest departing flights** be it non-stop and or connecting flights.\n- Format each full scheduled flight (if non-direct flight, don't just give me first flight- put in the full path till i reach my destination) as a dictionary with these fields:\n  - airline\n  - from (IATA code)\n  - to (IATA code)\n  - departure_time (ISO format)\n  - arrival_time (ISO format)\n  - duration (e.g., '13h')\n  - price (in {home_country} currency if possible)\n\nReturn ONLY this raw JSON, no markdown or explanation:\n{{\n  \"departing_flights\": [\n    {{\"airline\": \"...\", \"from_airport\": \"...\", \"to_airport\": \"...\", \"departure_time\": \"...\", \"arrival_time\": \"...\", \"duration\": \"...\", \"price\": \"...\"}},\n    {{...}},\n    {{...}}\n  ]\n}}",

  "parse_returning_flights": "You are a travel assistant.\n\nGiven a list of returning flight segments in JSON format:\n{returning_flight_data}\n\nAnd the user's details:\n- Home country: {home_country}\n- Destination country: {destination_country}\n\nYour task:\n- Identify and return the top 3 **cheapest returning flights**.be it non-stop and or connecting flights.\n- Format each full scheduled flight (if non-direct flight, don't just give me first flight- put in the fullpath till i reach my destination) as a dictionary with these fields:\n  - airline\n  - from (IATA code)\n  - to (IATA code)\n  - departure_time (ISO format)\n  - arrival_time (ISO format)\n  - duration (e.g., '13h')\n  - price (in {home_country} currency if possible)\n\nReturn ONLY this raw JSON, no markdown or explanation:\n{{\n  \"returning_flights\": [\n    {{\"airline\": \"...\", \"from_airport\": \"...\", \"to_airport\": \"...\", \"departure_time\": \"...\", \"arrival_time\": \"...\", \"duration\": \"...\", \"price\": \"...\"}},\n    {{...}},\n    {{...}}\n  ]\n}}",

  "parse_weather_updates": "You are a travel weather assistant that can use tools to get weather information.\n\nYou have access to the following tools:\n{tools}\n\nUse the following format:\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question\n\nQuestion: {input}\nLocation: {location}\nFrom Date: {from_date}\nTo Date: {to_date}\n\nPlease get the current weather and forecast for the specified location and date range. Provide a daily summary if possible.\n\n{agent_scratchpad}",

  "parse_budget": "You are a travel budget expert. Estimate the **total trip cost** and **per person cost** based on the following inputs:\n\nUser Details:\n{user_input}\n\nFlight Details:\n{transportation}\n\nHotel Details:\n{hotel}\n\nPlanned Activities:\n{activities}\n\nPlease provide a breakdown including:\n- Total cost of flights\n- Total cost of hotels\n- Approximate cost of all activities (if not specified, make a realistic guess based on the type of activity)\n- Estimated cost of food per day (use preferences and travel location)\n- Internal travel (e.g. taxis, local transport)\n- Miscellaneous costs like shopping, tips, or entrance fees\n\nThen, compute:\n- Total trip cost\n- Cost per person\n\nRespond clearly in JSON format:\n\n{{\n  \"transportation_cost\": \"...\",\n  \"hotel_cost\": \"...\",\n  \"activities_cost\": \"...\",\n  \"food_estimate\": \"...\",\n  \"internal_travel_cost\": \"...\",\n  \"miscellaneous_cost\": \"...\",\n  \"total_cost\": \"...\",\n  \"per_person_cost\": \"...\"\n}}"
}
